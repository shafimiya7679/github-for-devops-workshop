name: PHP CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [8.4]

    steps:
      - uses: actions/checkout@v4

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      # 🔍 Run PHP_CodeSniffer (style check)
      - name: Run PHPCS (PSR-12)
        run: vendor/bin/phpcs --standard=PSR12 src

      # 🛠️ Run PHPStan (static analysis)
      - name: Run PHPStan
        run: vendor/bin/phpstan analyse src --level=max

      # 🔐 Run Psalm with taint analysis
      - name: Run Psalm (with taint analysis)
        run: vendor/bin/psalm --taint-analysis

      # ✅ Run tests (if PHPUnit configured in composer.json)
      - name: Run PHPUnit tests
        run: composer run-script test

  secrets-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 🔎 Run Gitleaks to scan for secrets (tokens, passwords, API keys)
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-git -v
